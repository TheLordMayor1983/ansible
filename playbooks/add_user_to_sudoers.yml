---
- name: Add User with Password to Sudoers
  hosts: 192.168.0.94
  become: true
  vars:
    # created with:
    # python -c 'import crypt; print crypt.crypt("This is my Password", "$1$SomeSalt$")'
    gcs_scan_password: $1$SomeSalt$3qQvRlVMNbQwLs/ap404E.
    
   #remote_user: root
  tasks:
 
   - name: Add a new user named gcs_scan
     user: name=gcs_scan password={{ gcs_scan_password }}
 
   - name: Add gcs_scan user to the sudoers
      copy:
          dest: "/etc/sudoers.d/gcs_scan"
          content: "gcs_scan  ALL=(ALL)  NOPASSWD: ALL"
 
   - name: Copy the file from master to the destination
      copy:
        src: "buffer/{{item.dest}}-id_rsa.pub"
        dest: "/tmp/remote-id_rsa.pub"  
      when: "{{ item.dest != ansible_hostname }}"
      with_items: 
        - { dest: "{{groups['app'][1]}}"}
        - { dest: "{{groups['app'][0]}}"}
        
   - name: add the public key into Authorized_keys file to enable Key Auth
      shell: "cat /tmp/remote-id_rsa.pub >> ~/.ssh/authorized_keys"
      register: addtoauth
 
   - name: Disable Password Authentication
     lineinfile:
           dest=/etc/ssh/sshd_config
           regexp='^PasswordAuthentication'
           line="PasswordAuthentication no"
           state=present
           backup=yes
     notify:
       - restart ssh
 
   - name: Disable Root Login
     lineinfile:
           dest=/etc/ssh/sshd_config
           regexp='^PermitRootLogin'
           line="PermitRootLogin no"
           state=present
           backup=yes
     notify:
       - restart ssh
 
  handlers:
   - name: restart ssh
     service:
       name=sshd
       state=restarted
